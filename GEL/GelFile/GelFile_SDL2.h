#pragma once
// - ------------------------------------------------------------------------------------------ - //
// GelFile_SDL2
// - ------------------------------------------------------------------------------------------ - //
#include "../Types/Types.h"
#include <GEL/GEL_SDL2.h>			// SDL_RWops
//#include <stdio.h>				// remove
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
typedef SDL_RWops GelFile;
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
// Init FileIO
// - ------------------------------------------------------------------------------------------ - //
inline void gelFile_Init() {
	FLog("GelFile SDL2");
}
// - ------------------------------------------------------------------------------------------ - //
inline void gelFile_Exit() {
	FLog("GelFile SDL2");
}
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
// Opening files
// - ------------------------------------------------------------------------------------------ - //
inline GelFile* gelFile_Open( const char* _fileName, const char* _openMask = "rb" ) {
	return SDL_RWFromFile(_fileName, _openMask);
}
// - ------------------------------------------------------------------------------------------ - //
inline GelFile* gelFile_Open_ReadOnly( const char* _fileName ) {
	return gelFile_Open(_fileName, "rb");
}
// - ------------------------------------------------------------------------------------------ - //
inline GelFile* gelFile_Open_WriteOnly( const char* _fileName ) {
	return gelFile_Open(_fileName, "wb");
}
// - ------------------------------------------------------------------------------------------ - //
inline GelFile* gelFile_Open_AppendOnly( const char* _fileName ) {
	return gelFile_Open(_fileName, "ab");
}
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
// Closing Files
// - ------------------------------------------------------------------------------------------ - //
inline void gelFile_Close( GelFile* fp ) {
	SDL_RWclose(fp);	// NOTE: might want to handle the returned error
}
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
inline bool gelFile_Exists( const char* _fileName ) {
	GelFile* fp = gelFile_Open_ReadOnly(_fileName);
	if (!fp) {
		return false;
	}
	
	gelFile_Close(fp);
	
	return true;
}
// - ------------------------------------------------------------------------------------------ - //
inline int gelFile_Delete( const char* /*_fileName*/ ) {
	Error("Can't delete files!");
	return 0;
	
	//return remove(_fileName);
}
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
// Get the size of an open file, in bytes
// - ------------------------------------------------------------------------------------------ - //
inline st gelFile_Size( SDL_RWops* fp ) {
	Sint64 size = SDL_RWsize(fp);
	return (size < 0) ? 0 : size;		// -1 on error
}
// - ------------------------------------------------------------------------------------------ - //
// Get the size of a file in bytes
// - ------------------------------------------------------------------------------------------ - //
inline st gelFile_Size( const char* fileName ) {
	GelFile* fp = gelFile_Open_ReadOnly(fileName);
	if (!fp) {
		return 0;
	}

	st size = gelFile_Size(fp);
	
	gelFile_Close(fp);
	
	return size;
}
// - ------------------------------------------------------------------------------------------ - //


// NOTE: size_t SDL_RWread(struct SDL_RWops* context, void* ptr, size_t size, size_t maxnum);

// - ------------------------------------------------------------------------------------------ - //
// Read Function
// - ------------------------------------------------------------------------------------------ - //
inline st gelFile_Read( SDL_RWops* fp, char* data, const st size ) {	
	return SDL_RWread(fp, data, 1, size);
}
// - ------------------------------------------------------------------------------------------ - //
// Write Function
// - ------------------------------------------------------------------------------------------ - //
inline st gelFile_Write( GelFile* fp, const char* data, const st size ) {
	return SDL_RWwrite(fp, data, 1, size);
}
// - ------------------------------------------------------------------------------------------ - //
